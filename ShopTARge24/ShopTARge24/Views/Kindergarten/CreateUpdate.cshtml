@model ShopTARge24.Models.Kindergarten.KindergartenCreateUpdateViewModel

@if (Model.Id.HasValue)
{
    <h1>Update</h1>
}
else
{
    <h1>Create</h1>
}


<div>
    <form method="post" enctype="multipart/form-data" asp-action="@(Model.Id.HasValue ? "Update" : "Create")" asp-controller="Kindergarten">
        <input asp-for="Id" type="hidden" />
        <input asp-for="CreatedAt" type="hidden" />
        <input asp-for="UpdatedAt" type="hidden" />

        <div class="form-group row">
            <label asp-for="GroupName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="GroupName" class="form-control" />
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="KindergartenName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="KindergartenName" class="form-control" />
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="ChildrenCount" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="ChildrenCount" class="form-control" />
            </div>
        </div>

        <div class="form-group row">
            <label asp-for="TeacherName" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="TeacherName" class="form-control" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-sm-2 col-form-label">Images</label>
            <div class="col-sm-10">
                <input asp-for="ImageFiles" class="form-control" type="file" accept="image/*" multiple id="imageFiles" />
                <small class="form-text text-muted">You can select multiple images at once (up to 20 files, 10MB each)</small>
                <div id="fileList" class="mt-2"></div>
                
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.ImagePath))
        {
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">Current Image</label>
                <div class="col-sm-10">
                    <div style="display: inline-block; position: relative;">
                        <img src="@Model.ImagePath" alt="Kindergarten Image" style="max-width:200px" />
                        @if (Model.Id.HasValue)
                        {
                            <form method="post" asp-action="DeleteImage" style="display: inline; margin-left: 5px;">
                                <input type="hidden" name="kindergartenId" value="@Model.Id" />
                                <input type="hidden" name="imagePath" value="@Model.ImagePath" />
                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this image?')" style="position: absolute; top: 0; right: 0; font-size: 12px; padding: 2px 6px;">×</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        }

        @if (Model.ImagePaths != null && Model.ImagePaths.Any())
        {
            <div class="form-group row">
                <label class="col-sm-2 col-form-label">Current Gallery</label>
                <div class="col-sm-10">
                    @foreach (var img in Model.ImagePaths)
                    {
                        <div style="display: inline-block; margin-right: 8px; margin-bottom: 8px; position: relative;">
                            <img src="@img" alt="Gallery Image" style="max-width:120px;" />
                            @if (Model.Id.HasValue)
                            {
                                <form method="post" asp-action="DeleteImage" style="display: inline; margin-left: 5px;">
                                    <input type="hidden" name="kindergartenId" value="@Model.Id" />
                                    <input type="hidden" name="imagePath" value="@img" />
                                    <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this image?')" style="position: absolute; top: 0; right: 0; font-size: 12px; padding: 2px 6px;">×</button>
                                </form>
                            }
                        </div>
                    }
                </div>
            </div>
        }

        @if (Model.Id.HasValue)
        {
            <button type="submit" class="btn btn-success">Update</button>
        }
        else
        {
            <button type="submit" class="btn btn-success">Create</button>
        }

        <a asp-action="Index" asp-controller="kindergarten" class="btn btn-success">Back</a>
    </form>
</div>

<script>
document.getElementById('imageFiles').addEventListener('change', function(e) {
    const fileList = document.getElementById('fileList');
    fileList.innerHTML = '';
    
    if (e.target.files.length > 0) {
        const fileCount = document.createElement('p');
        fileCount.textContent = `Selected ${e.target.files.length} file(s):`;
        fileCount.className = 'text-success font-weight-bold';
        fileList.appendChild(fileCount);
        
        let totalSize = 0;
        Array.from(e.target.files).forEach((file, index) => {
            const fileItem = document.createElement('div');
            const fileSizeKB = (file.size / 1024).toFixed(1);
            const fileSizeMB = (file.size / (1024 * 1024)).toFixed(2);
            const sizeText = file.size > 1024 * 1024 ? `${fileSizeMB} MB` : `${fileSizeKB} KB`;
            
            fileItem.textContent = `${index + 1}. ${file.name} (${sizeText})`;
            fileItem.className = 'text-muted small';
            fileList.appendChild(fileItem);
            
            totalSize += file.size;
        });
        
        const totalSizeMB = (totalSize / (1024 * 1024)).toFixed(2);
        const totalSizeInfo = document.createElement('div');
        totalSizeInfo.textContent = `Total size: ${totalSizeMB} MB`;
        totalSizeInfo.className = 'text-info small mt-1';
        fileList.appendChild(totalSizeInfo);
        
        if (e.target.files.length > 20) {
            const warning = document.createElement('div');
            warning.textContent = 'Warning: You have selected more than 20 files. Only the first 20 will be uploaded.';
            warning.className = 'text-warning small mt-1';
            fileList.appendChild(warning);
        }
        
        if (totalSize > 200 * 1024 * 1024) { // 200MB total
            const warning = document.createElement('div');
            warning.textContent = 'Warning: Total file size is very large. Upload may take a long time.';
            warning.className = 'text-warning small mt-1';
            fileList.appendChild(warning);
        }
    }
});

</script>
